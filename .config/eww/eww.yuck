(deflisten workspace :initial "
  (box :class \"workspace\" :orientation \"h\" :spacing 5
      (label :class 'focused' :text '')
      (label :text '')
      (label :text '')
      (label :text '')
      (label :text '')
      (label :text '')
)" `nu scripts/workspace.nu`)
(defpoll time :interval "5s" "nu scripts/time.nu --time")
(defpoll date :interval "5m" "nu scripts/time.nu --date")
(defpoll networkStatus :interval "5s" "nu scripts/network.nu")
(defpoll bluetoothStatus :interval "5s" "nu scripts/bluetooth.nu")
(defpoll volumeIcon :interval "1s" "nu scripts/volume.nu --getVolumeIcon")
(defpoll volume :interval "1s" "nu scripts/volume.nu --getVolume")
(defpoll music :interval "5s" "nu scripts/music.nu")

(defwidget workspaces []
  (literal :content workspace)
  )

(defwidget right []
  (box :orientation "h" 
       :space-evenly false  
       :halign "start"
       :class "right_modules"
    (workspaces)
    )
  )

(defwidget center []
  (box :orientation "h" 
       :space-evenly false  
       :halign "center"
       :class "center_modules"
     music
    )
  )

(defwidget volume []
  (box :class "volume"
       :orientation "h"
       :space-evenly false
    (button :onclick "pamixer -t" volumeIcon)
    (scale :value volume
           :min 0
           :max 100
           :orientation "h"
           :width 120
           :onchange "pamixer --set-volume {}"
           :class "volumeSlider"
      )
    )
  )

(defwidget left []
  (box :orientation "h" 
       :space-evenly false  
       :halign "end"
       :class "left_modules"
       :spacing 5
      (volume)
      (button networkStatus)
      (button bluetoothStatus)
      (label :text time)
      (button date)
    )
  )

(defwidget bar_1 []
  (box :class "bar_class"
       :orientation "h"
    (right)
    (center)
    (left)
    )
  )

(defwindow bar
  :monitor 0
  :geometry (
             geometry 
             :x "32px"
             :y "10px"
             :width "240px"
             :height "10px"
             :anchor "top center"
             )
  :stacking "bg"
  :reserve (struts :distance "10px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar_1)
  )
